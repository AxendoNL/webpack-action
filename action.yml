name: 'Webpack'
description: 'Run Webpack action'
inputs:
  directory:
    description: 'Path to the webpack directory'
    required: true
  output-folder:
    description: 'Webpack output path'
    required: true
  node-version:
    description: 'version of node.js to load, is set at organization or repository level with FRONTEND_NODE_VERSION and VUE_NODE_VERSION variables'
    required: false
    default: '16'
runs:
  using: "composite"
  steps:
    ### Get latest git commit with changes to the project
    - id: WEBPACK_HASH
      run: echo "hash=$(git log -1 --pretty=format:'%h' --follow '${{ inputs.directory }}')" >> $env:GITHUB_OUTPUT # AXDEVOPS-16: replacement for set-output   
      shell: powershell
    
    ### First make sure the output directory exists, this is needed or cache action will throw an error
    - name: Create Directory.
      run: New-Item -Path "${{ inputs.output-folder }}" -ItemType "directory" -Force
      shell: powershell
        
    ### Check cache action for existing webpack build
    - name: Cache Webpack Build
      id: CACHE_WEBPACK
      uses: actions/cache@v4
      with:
        path: "${{ inputs.output-folder }}"
        key: webpack-cache-${{inputs.directory}}-${{steps.WEBPACK_HASH.outputs.hash}}
    
    ### below if will make sure this only runs when webpacks needs to be build 
    - name: Set the cache file name in env
      id: CACHE_FILE_NAME
      if: steps.CACHE_WEBPACK.outputs.cache-hit != 'true'
      run: |
        if(Test-Path -Path 'package-lock.json'){ echo "cachefile=package-lock.json" >> $env:GITHUB_OUTPUT }
        elseif(Test-Path 'npm-shrinkwrap.json'){ echo "cachefile=npm-shrinkwrap.json" >> $env:GITHUB_OUTPUT }
      working-directory: ${{ inputs.directory }}
      shell: powershell

    - name: Setup node 
      if: steps.CACHE_WEBPACK.outputs.cache-hit != 'true'
      uses: actions/setup-node@v4
      with:
        node-version: '${{ inputs.node-version }}'
#        cache: 'npm'
#        cache-dependency-path: "${{ inputs.directory }}\\${{steps.CACHE_FILE_NAME.outputs.cachefile}}"
  
    - name: NPM install
      if: steps.CACHE_WEBPACK.outputs.cache-hit != 'true'
      run: npm ci
      working-directory: ${{ inputs.directory }}
      shell: powershell
      
    - name: Run webpack
      if: steps.CACHE_WEBPACK.outputs.cache-hit != 'true'
      run: npm run build:production
      working-directory: ${{ inputs.directory }}
      shell: powershell